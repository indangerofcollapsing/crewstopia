#include "ohs_i0_anims"

void ActionTwirlStep(float fDist, object oTarget, float fFacingCaller)
{
  vector vAxis = VectorNormalize(GetPosition(oTarget)-GetPosition(OBJECT_SELF));
  float fFacing = VectorToAngle(vAxis);
  vector vSpot = GetPosition(oTarget)-fDist*vAxis;
  location lSpot = Location(GetArea(oTarget),vSpot,fFacing+fFacingCaller);

  ActionMoveToLocation(lSpot);
  ActionDoCommand(SetFacing(fFacing+fFacingCaller));
  ActionWait(0.35);
}

void main()
{
  object oPC = GetPCSpeaker();
  object oSelf = OBJECT_SELF;

  float fRadius, fFacing, fOffset;
  if (GetGender(oPC)==GENDER_MALE)
  {
    switch (GetAppearanceType(oPC))
    {
      case APPEARANCE_TYPE_DWARF:    fRadius =  0.15; break;
      case APPEARANCE_TYPE_ELF:      fRadius =  0.00; break;
      case APPEARANCE_TYPE_GNOME:    fRadius =  0.00; break;
      case APPEARANCE_TYPE_HALF_ELF: fRadius =  0.15; break;
      case APPEARANCE_TYPE_HALF_ORC: fRadius =  0.40; break;
      case APPEARANCE_TYPE_HALFLING: fRadius = -0.10; break;
      case APPEARANCE_TYPE_HUMAN:    fRadius =  0.15; break;
    }
  }
  else
  {
    switch (GetAppearanceType(oPC))
    {
      case APPEARANCE_TYPE_DWARF:    fRadius =  0.50; break;
      case APPEARANCE_TYPE_ELF:      fRadius =  0.32; break;
      case APPEARANCE_TYPE_GNOME:    fRadius =  0.25; break;
      case APPEARANCE_TYPE_HALF_ELF: fRadius =  0.45; break;
      case APPEARANCE_TYPE_HALF_ORC: fRadius =  0.75; break;
      case APPEARANCE_TYPE_HALFLING: fRadius =  0.10; break;
      case APPEARANCE_TYPE_HUMAN:    fRadius =  0.45; break;
    }
  }

  ActionPauseConversation();
  AssignCommand(oPC,ActionMoveClose(0.71,oSelf,0.0,0.0));
  if (GetGender(oPC)==GENDER_MALE)
  {
    AssignCommand(oPC,ActionPlayAnimation(ANIMATION_LOOPING_MEDITATE,1.0f,10.0f));
    ActionWait(3.0f);
  }
  else
  {
    AssignCommand(oPC,ActionWait(1.5f));
    AssignCommand(oPC,ActionPlayAnimation(ANIMATION_LOOPING_GET_MID,1.0f,4.0f));
  }
  ActionMoveClose(fRadius,oPC,0.0,0.0);
  ActionPlayAnimation(ANIMATION_FIREFORGET_VICTORY2,1.0f,0.5);
  effect eFreeze = EffectVisualEffect(VFX_DUR_FREEZE_ANIMATION);
  ActionDoCommand(ApplyEffectToObject(DURATION_TYPE_PERMANENT,eFreeze,OBJECT_SELF));
  int nNth;
  fFacing = 0.0;
  fOffset = 0.0;
  for (nNth=0; nNth<=6; nNth++)
  {
    switch (nNth)
    {
      case 0: case 6: fOffset =  1.0f; break;
      case 1: case 5: fOffset =  0.5 ; break;
      case 2: case 4: fOffset = -0.5 ; break;
      case 3:         fOffset = -1.0f; break;
    }
    ActionTwirlStep(fRadius-0.15*fOffset,oPC,fFacing);
    fFacing += 60.0f;
  }
  ActionDoCommand(RemoveEffect(OBJECT_SELF,eFreeze));
  ActionMoveClose(0.6,oPC,0.0,0.0);
  AssignCommand(oPC,ActionWait(2.0f));
  AssignCommand(oPC,ActionResumeConversation());
}

////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

