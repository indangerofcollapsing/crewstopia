#include "ohs_i0_toolkit"
void UnequipVisible()
{
  object oItem;
  oItem = GetItemInSlot(INVENTORY_SLOT_RIGHTHAND);
  if (GetIsObjectValid(oItem))
  {
    ActionUnequipItem(oItem);
    ActionWait(0.9);
  }
  oItem = GetItemInSlot(INVENTORY_SLOT_HEAD);
  if (GetIsObjectValid(oItem))
  {
    ActionUnequipItem(oItem);
    ActionPlayAnimation(ANIMATION_FIREFORGET_SALUTE,1.0f);
    ActionWait(0.7);
  }
  oItem = GetItemInSlot(INVENTORY_SLOT_LEFTHAND);
  if (GetIsObjectValid(oItem))
  {
    ActionUnequipItem(oItem);
    ActionWait(0.9);
  }
  oItem = GetItemInSlot(INVENTORY_SLOT_CHEST);
  if (GetIsObjectValid(oItem))
  {
    ActionUnequipItem(oItem);
    ActionPlayAnimation(ANIMATION_LOOPING_GET_LOW,2.0f,1.0f);
    ActionWait(0.9);
  }
}

void DestroyAllItems()
{
  object oItem = GetFirstItemInInventory();
  while (GetIsObjectValid(oItem))
  {
    DestroyObject(oItem);
    oItem = GetNextItemInInventory();
  }
  int nSlot;
  for (nSlot=0;nSlot<=NUM_INVENTORY_SLOTS;nSlot++)
  {
    DestroyObject(GetItemInSlot(nSlot));
  }
}

void DropEverythingInto(object oPool)
{
  ClearAllActions();
  UnequipVisible();
  ActionMoveToObject(oPool);
  ActionPlayAnimation(ANIMATION_LOOPING_DEAD_FRONT,0.2,4.0f);
  ActionDoCommand(DestroyAllItems());
  int nStatus = GetLocalInt(OBJECT_SELF,"OHS_TEMPLE_STATUS");
  ActionDoCommand(SetLocalInt(OBJECT_SELF,"OHS_TEMPLE_STATUS",nStatus+1));
  ActionDoCommand(SetCommandable(TRUE));
  SetCommandable(FALSE);
}

void main()
{
  object oPC = GetEnteringObject();
  object oPool = GetWaypointByTag("WP_POOL");
  if (GetLocalInt(oPC,"OHS_TEMPLE_STATUS")==30)
  {
    AssignCommand(oPC,DropEverythingInto(oPool));
  }
}

////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

