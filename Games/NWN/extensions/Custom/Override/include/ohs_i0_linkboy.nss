//::///////////////////////////////////////////////
//:: Name ohs_i0_linkboy
//:: Copyright (c) 2005 OldMansBeard
//:://////////////////////////////////////////////
/*
   Functions related to maintaining linkboy's listening patterns
*/
//:://////////////////////////////////////////////
//:: Created By: OldMansBeard
//:: Created On: 2005-04-27
//:://////////////////////////////////////////////

#include "ohs_i0_messages"

const int OHS_VERSION = 151;

// Set listening patterns to catch OHS commands
void OHS_SetLinkboyListeningPatterns();

// Remember what version you were spawned under
void OHS_SetLinkboyVersion();

// Test if linkboy is stale (spawned under an earlier version)
int OHS_GetIsLinkboyStale();

// Set the linkboy disguise to nIndex in ohs_linkboys.2da
void OHS_SetLinkboyDisguise(int nIndex);

// Linkboy's appearance is different from the one in nIndex in ohs_linkboys.2da
int OHS_TestLinkboyDisguise(int nIndex);

/*******************/
/* Implementations */
/*******************/

// Set listening patterns to catch OHS commands
void OHS_SetLinkboyListeningPatterns()
{
  SetListening(OBJECT_SELF,TRUE);
  SetListenPattern(OBJECT_SELF,"OHS KEEP",2000);
  SetListenPattern(OBJECT_SELF,"OHK",2002);
  SetListenPattern(OBJECT_SELF,"OHS RECALL",2010);
  SetListenPattern(OBJECT_SELF,"OHR",2012);
  SetListenPattern(OBJECT_SELF,"OHS RECALL UPDATE",2014);
  SetListenPattern(OBJECT_SELF,"OHRU",2016);
  SetListenPattern(OBJECT_SELF,"OHS DROP ALL",2020);
  SetListenPattern(OBJECT_SELF,"OHDA",2022);
  SetListenPattern(OBJECT_SELF,"OHS FIX FACTIONS",2030);
  SetListenPattern(OBJECT_SELF,"OHFF",2032);
  SetListenPattern(OBJECT_SELF,"OHS PARTY SAVE",2040);
  SetListenPattern(OBJECT_SELF,"OHPS",2042);
  SetListenPattern(OBJECT_SELF,"OHS ABSENT FRIENDS",2050);
  SetListenPattern(OBJECT_SELF,"OHAF",2052);
  SetListenPattern(OBJECT_SELF,"OHS UPDATE ME",2060);
  SetListenPattern(OBJECT_SELF,"OHUM",2062);
  SetListenPattern(OBJECT_SELF,"OHS WEED VAULT",2070);
  SetListenPattern(OBJECT_SELF,"OHWV",2072);
  SetListenPattern(OBJECT_SELF,"HEAR US GREAT OHUM",2080);
  SetListenPattern(OBJECT_SELF,"HUGO",2082);
}

// Remember what version you were spawned under
void OHS_SetLinkboyVersion()
{
  SetLocalInt(OBJECT_SELF,"OHS_VERSION_NUMBER",OHS_VERSION);
}

// Test if linkboy is stale (spawned under an earlier version)
int OHS_GetIsLinkboyStale()
{
  return GetLocalInt(OBJECT_SELF,"OHS_VERSION_NUMBER")<OHS_VERSION;
}

// Set the linkboy disguise to nIndex in ohs_linkboys.2da
void OHS_SetLinkboyDisguise(int nIndex)
{

  object oTorch = GetItemPossessedBy(OBJECT_SELF,"OHS_REDTORCH");
  if (!GetIsObjectValid(oTorch)) oTorch = CreateItemOnObject("ohs_it_torch");
  int bNoTorch = (Get2DAString("ohs_linkboys","HasTorch",nIndex)=="0");
  SetLocalInt(OBJECT_SELF,"OHS_TORCH_NOT_VISIBLE",bNoTorch);

  int bShowTorch = FALSE;
  ActionPauseConversation();
  if (GetItemInSlot(INVENTORY_SLOT_LEFTHAND)==oTorch)
  {
    bShowTorch = TRUE;
    ActionUnequipItem(oTorch);
    ActionWait(0.5);
  }
  ActionDoCommand(SetPortraitId(OBJECT_SELF,StringToInt(Get2DAString("ohs_linkboys","Portrait",nIndex))));
  ActionDoCommand(SetCreatureAppearanceType(OBJECT_SELF,StringToInt(Get2DAString("ohs_linkboys","AppType",nIndex))));
  int nName = StringToInt(Get2DAString("ohs_linkboys","Name",nIndex));
  string sName = OHS_GetStringByLanguage(nName,GetPCSpeaker());
  ActionDoCommand(SetName(OBJECT_SELF,sName));
  ActionWait(1.0);
  if (bNoTorch==FALSE && bShowTorch==TRUE)
  {
    ActionEquipItem(oTorch,INVENTORY_SLOT_LEFTHAND);
  }
  ActionResumeConversation();
}

// Linkboy's appearance is different from the one in nIndex in ohs_linkboys.2da
int OHS_TestLinkboyDisguise(int nIndex)
{
  int nTestApp = StringToInt(Get2DAString("ohs_linkboys","AppType",nIndex));
  int nMenu = StringToInt(Get2DAString("ohs_linkboys","Menu",nIndex));
  SetCustomToken(450+nIndex,OHS_GetStringByLanguage(nMenu,GetPCSpeaker()));
  return GetAppearanceType(OBJECT_SELF)!=nTestApp;
}


////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////


