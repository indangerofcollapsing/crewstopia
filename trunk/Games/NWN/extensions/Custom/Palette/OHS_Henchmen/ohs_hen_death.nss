//::///////////////////////////////////////////////
//:: Name ohs_hen_death
//:: Copyright (c) 2004 OldMansBeard
//:://////////////////////////////////////////////
/*
   OnDeath Event Handler for OHS Henchmen.
   This is a simplified version of Bioware's x0_ch_hen_death script
*/
//:://////////////////////////////////////////////
//:: Created By: OldMansBeard
//:: Created On: 2004-12-10
//:://////////////////////////////////////////////

#include "x0_i0_henchman"
#include "inc_debug_dac"
#include "nw_i0_plot"

void main()
{
  //debugVarObject("ohs_hen_death", OBJECT_SELF);

  PreRespawnSetup();

  DelayCommand(0.5, VoiceHealMe(TRUE));
  object oPC = GetLastMaster();
  //debugVarObject("oPC", oPC);
  object oSelf = OBJECT_SELF;
  //debugVarObject("oSelf", oSelf);

  ClearAllDialogue(oPC, OBJECT_SELF);
  ClearAllActions();

  if (!GetIsObjectValid(oPC) || GetIsDead(oPC))
  {
    //debugMsg("Master is not available.");
    DelayCommand(1.0, RespawnHenchman());
    DelayCommand(1.5, PostRespawnCleanup());
  }
  else
  {
    //debugMsg("Master is available.");
    DelayCommand(0.1, AddHenchman(oPC, oSelf));
    RaiseForRespawn(oPC);
  }
}

////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

