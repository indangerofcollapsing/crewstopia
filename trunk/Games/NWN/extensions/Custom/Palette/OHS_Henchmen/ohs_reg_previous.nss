// Calculate the total GP value of everything worn or carried by oChar
int CurrentWorth(object oChar);

// Assess the re-registration fee for a PC with an existing registration
int AssessFee(object oPC, object oClone);

// Test if the PC already has a clone in the database. If so, retrieve its properties.
int StartingConditional()
{
  object oPC = GetPCSpeaker();
  string sName = GetName(oPC);
  string sRollCall = GetCampaignString("OHS_ROLL_CALL","sRollCall");
  if (FindSubString(sRollCall,","+sName+",")>=0)
  {
    // Retrieve the clone
    location lClone = GetLocation(OBJECT_SELF);
    object oClone = RetrieveCampaignObject("OHS_HENCHMAN_"+sName,"oHenchman",lClone);
    // Note its properties and assess the re-registration fee
    SetLocalInt(OBJECT_SELF,"OHS_CLONE_GENDER",GetGender(oClone));
    SetLocalInt(OBJECT_SELF,"OHS_CLONE_RACE",GetRacialType(oClone));
    SetLocalInt(OBJECT_SELF,"OHS_CLONE_PHENO",GetPhenoType(oClone));
    SetLocalInt(OBJECT_SELF,"OHS_FEE",AssessFee(oPC,oClone));
    // Destroy the clone again
    AssignCommand(oClone,SetIsDestroyable(TRUE,FALSE,FALSE));
    AssignCommand(oClone,ActionDoCommand(DestroyObject(OBJECT_SELF)));
    return TRUE;
  }
  else
  {
    return FALSE;
  }
}

// Calculate the total GP value of everything worn or carried by oChar
int CurrentWorth(object oChar)
{
  int nTotal = 0;
  int nNth;
  for (nNth=0;nNth<=NUM_INVENTORY_SLOTS;nNth++)
    nTotal += GetGoldPieceValue(GetItemInSlot(nNth,oChar));
  object oThing = GetFirstItemInInventory(oChar);
  object oThing2;
  while (GetIsObjectValid(oThing))
  {
    nTotal += GetGoldPieceValue(oThing);
    if (GetHasInventory(oThing))
    {
      oThing2 = GetFirstItemInInventory(oThing);
      while (GetIsObjectValid(oThing2))
      {
       nTotal += GetGoldPieceValue(oThing2);
       oThing2 = GetNextItemInInventory(oThing);
      }
    }
    oThing = GetNextItemInInventory(oChar);
  }
  return nTotal;
}

// Assess the re-registration fee for a PC with an existing registration
int AssessFee(object oPC, object oClone)
{
  int nFee = 10*(1+abs(GetHitDice(oPC)-GetHitDice(oClone)));
  nFee += abs(CurrentWorth(oPC)-CurrentWorth(oClone))/100;
  // Three significant digits
  string sFee = IntToString(nFee);
  int nLen = GetStringLength(sFee);
  sFee = GetStringLeft(sFee,3)+GetStringLeft("00000000000000000",nLen-3);
  nFee = StringToInt(sFee);
  return nFee;
}



////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

