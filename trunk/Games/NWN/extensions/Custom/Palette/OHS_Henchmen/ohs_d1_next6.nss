#include "ohs_i0_messages"
string Decode(string sCoded)
{
  object oPC = GetPCSpeaker();
  string sDecoded, sToken, sKeyChar, sRemaining;
  int index1, index2, nToken;

  sRemaining = sCoded;
  index1 = FindSubString(sRemaining,"[");
  index2 = FindSubString(sRemaining,"]");
  while (index1>-1 && index2>index1)
  {
    sDecoded += GetStringLeft(sRemaining,index1);
    sToken = GetSubString(sRemaining,index1+1,index2-index1-1);
    sKeyChar = GetStringLeft(sToken,1);
    if (sKeyChar=="A")
    {
      sToken = GetStringRight(sToken,GetStringLength(sToken)-1);
      nToken = StringToInt(sToken);
      sDecoded += GetStringLeft(OHS_GetStringByLanguage(nToken,oPC),1);
    }
    else if (sKeyChar=="R")
    {
      sToken = GetStringRight(sToken,GetStringLength(sToken)-1);
      nToken = StringToInt(sToken);
      sDecoded += OHS_GetRacialTypeString(nToken,oPC);
    }
    else if (sKeyChar=="C")
    {
      sToken = GetStringRight(sToken,GetStringLength(sToken)-1);
      nToken = StringToInt(sToken);
      sDecoded += OHS_GetClassNameString(nToken,oPC);
    }
    else
    {
      nToken = StringToInt(sToken);
      sDecoded += OHS_GetStringByLanguage(nToken,oPC);
    }
    sRemaining = GetStringRight(sRemaining,GetStringLength(sRemaining)-index2-1);
    index1 = FindSubString(sRemaining,"[");
    index2 = FindSubString(sRemaining,"]");
  }
  sDecoded += sRemaining;
  return sDecoded;
}

void main()
{
  // Assumes well-formed, comma delimited list of names
  string sRollCall = GetLocalString(OBJECT_SELF,"OHS_sRollCall");
  sRollCall = GetStringRight(sRollCall,GetStringLength(sRollCall)-1);
  int nCounted = 0;
  while (GetStringLength(sRollCall)>1 && nCounted<6)
  {
    nCounted++;
    int iBreak = FindSubString(sRollCall,",");
    string sName = GetStringLeft(sRollCall,iBreak);
    sRollCall = GetStringRight(sRollCall,GetStringLength(sRollCall)-iBreak-1);
    SetLocalString(OBJECT_SELF,"OHS_CALL_NAME"+IntToString(nCounted),sName);
    SetCustomToken(700+nCounted,sName);
    string sDescription = Decode(GetCampaignString("OHS_HENCHMAN_"+sName,"sCoded"));
    if (sDescription=="")
    {
      sDescription = GetCampaignString("OHS_HENCHMAN_"+sName,"sDescription");
    }
    SetCustomToken(710+nCounted,sDescription);
  }
  SetLocalInt(OBJECT_SELF,"OHS_nCounted",nCounted);
  SetLocalString(OBJECT_SELF,"OHS_sRollCall",","+sRollCall);
}

////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// (C) 2004, 2005, 2006 by bob@minors-ranton.fsnet.co.uk (aka "OldMansBeard")         //
//                                                                                    //
// The NWScript source code file to which this notice is attached is copyright.       //
// It may not be published or passed to a third party in part or in whole modified    //
// or unmodified without the express consent of the copyright holder.                 //
//                                                                                    //
// NWN byte code generated by compiling it or variations of it may be published       //
// or otherwise distributed notwithstanding under the terms of the Bioware EULA.      //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////


